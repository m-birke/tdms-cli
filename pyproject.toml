[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tdms-cli"
dynamic = ["version"]
description = 'Small util to analyze TDMS files quickly via CLI'
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "m-birke", email = "wesci@web.de" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
  "nptdms",
  "pandas",
  "typer",
]

[project.urls]
Documentation = "https://github.com/m-birke/tdms-cli#readme"
Issues = "https://github.com/m-birke/tdms-cli/issues"
Source = "https://github.com/m-birke/tdms-cli"

[project.scripts]
tu = "tdms_cli.cli:main"

[tool.hatch.version]
path = "src/tdms_cli/__about__.py"

[tool.hatch.build]
include = [
  "src/tdms_cli/",
]
sources = [
  "src",
]

[tool.hatch.envs.default]
path = "./.hatch/default"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/tdms_cli tests}"

[tool.ruff]
target-version = "py38"
line-length = 120

[tool.ruff.lint]
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
  # Allow print statements
  "T201",
]

[tool.ruff.lint.isort]
known-first-party = ["tdms_cli"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.coverage.run]
source_pkgs = ["tdms_cli", "tests"]
branch = true
parallel = true
omit = [
  "src/tdms_cli/__about__.py",
]

[tool.coverage.paths]
tdms_cli = ["src/tdms_cli", "*/tdms-cli/src/tdms_cli"]
tests = ["tests", "*/tdms-cli/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
